#LOCAL
#=======
#spring.datasource.url=jdbc:postgresql://localhost:5432/jaoDB
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.url=jdbc:postgresql://ec2-54-74-14-109.eu-west-1.compute.amazonaws.com:5432/d1c2r62fpkdk34
#spring.datasource.username=tboyqicofgsuyv
#spring.datasource.password=7d7aa33e27c241efa92c341b184398356cd0f28853fc99592928ad9b63a9aec1
#vercel
#========
#@internal
spring.datasource.url=postgres://jaodb_user:HLPcqoD2aL2IKGgVltz6LCRUfYorrPpK@dpg-cngra56ct0pc73e80nig-a/jaodb
#EXTERNAL
#spring.datasource.url=postgres://jaodb_user:HLPcqoD2aL2IKGgVltz6LCRUfYorrPpK@dpg-cngra56ct0pc73e80nig-a.frankfurt-postgres.render.com/jaodb
spring.datasource.username=jaodb_user
spring.datasource.password=HLPcqoD2aL2IKGgVltz6LCRUfYorrPpK
#LOCAL CON VARIABLES
#=====================
#spring.datasource.url=${URLDB}
#spring.datasource.username=${USERNAMEDB}
#spring.datasource.password=${PASSWORDDB}

#DESA
#=======
#spring.datasource.url=jdbc:postgresql://localhost:5432/jaoDB
#spring.datasource.username=postgres
#spring.datasource.password=admin

spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# server.port=8085
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
app.jwt.secret=openb
app.jwt.expiration-ms=86400000